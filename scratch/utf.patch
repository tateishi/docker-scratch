diff -upNr orig/Squeak-4.10.2.2614-src/unix/vm-display-X11/sqUnixX11.c new/Squeak-4.10.2.2614-src/unix/vm-display-X11/sqUnixX11.c
--- orig/Squeak-4.10.2.2614-src/unix/vm-display-X11/sqUnixX11.c	2012-07-31 03:32:54.000000000 +0900
+++ new/Squeak-4.10.2.2614-src/unix/vm-display-X11/sqUnixX11.c	2020-12-07 16:50:02.000000000 +0900
@@ -1699,29 +1699,58 @@ static unsigned char *lookupKeys(int (*l
 
 static int recordPendingKeys(void)
 {
-  if (inputCount > 0)
-    {
-      int i= iebOut - iebIn;
-      for (i= (i > 0 ? i : IEB_SIZE + i) / 4; i > 0; -- i)
-	{
-# if defined(DEBUG_XIM)
-	  fprintf(stderr, "%3d pending key %2d=0x%02x\n", inputCount, i, *pendingKey);
-# endif
-	  recordKeyboardEvent(*pendingKey, EventKeyDown, modifierState, 0);
-	  recordKeyboardEvent(*pendingKey, EventKeyChar, modifierState, 0);
-	  recordKeystroke(*pendingKey);  /* DEPRECATED */
-	  ++pendingKey;
-	  if (--inputCount == 0) break;
-	}
-      return 1;
-    }
-  /* inputBuf is allocated by lookupKeys */
-  if (inputBuf != inputString)
-    {
+  if (inputCount <= 0) {
+    if (inputBuf != inputString) {
       free(inputBuf);
-      inputBuf= inputString;
+      inputBuf = inputString;
+    }
+    return 0;
+  }
+
+  int utf32 = 0;
+  while (inputCount > 0) {
+    //110x xxxx 10xx xxxx
+    if(inputCount >= 2 &&
+        pendingKey[0] >= 0xc0 && pendingKey[0] <= 0xdf && 
+        pendingKey[1] >= 0x80 && pendingKey[1] <= 0xbf) {
+      utf32 = ((pendingKey[0] & 0x1f) << 6) | (pendingKey[1] & 0x3f);
+      recordKeyboardEvent(0, EventKeyDown, modifierState, utf32);
+      recordKeyboardEvent(0, EventKeyChar, modifierState, utf32);
+      pendingKey+=2;
+      inputCount-=2;
+    //1110 xxxx 10xx xxxx 10xx xxxx
+    } else if(inputCount >= 3 &&
+       	pendingKey[0] >= 0xe0 && pendingKey[0] <= 0xef && 
+        pendingKey[1] >= 0x80 && pendingKey[1] <= 0xbf && 
+        pendingKey[2] >= 0x80 && pendingKey[2] <= 0xbf) {
+      utf32 = ((pendingKey[0]  & 0x0f) << 12) | ((pendingKey[1] & 0x3f) << 6) | (pendingKey[2] & 0x3f);
+      recordKeyboardEvent(0, EventKeyDown, modifierState, utf32);
+      recordKeyboardEvent(0, EventKeyChar, modifierState, utf32);
+      pendingKey+=3;
+      inputCount-=3;
+    //1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx
+    } else if(inputCount >= 4 &&
+       	pendingKey[0] >= 0xf0 && pendingKey[0] <= 0xf7 && 
+        pendingKey[1] >= 0x80 && pendingKey[1] <= 0xbf && 
+        pendingKey[2] >= 0x80 && pendingKey[2] <= 0xbf && 
+        pendingKey[3] >= 0x80 && pendingKey[3] <= 0xbf) {
+      utf32 = ((pendingKey[0] & 0x07) << 18) | 
+        ((pendingKey[1] & 0x3f) << 12) |
+       	((pendingKey[2] & 0x3f) << 6) |
+       	(pendingKey[3] & 0x3f);
+      recordKeyboardEvent(0, EventKeyDown, modifierState, utf32);
+      recordKeyboardEvent(0, EventKeyChar, modifierState, utf32);
+      pendingKey+=4;
+      inputCount-=4;
+    } else {
+      recordKeyboardEvent(*pendingKey, EventKeyDown, modifierState, 0);
+      recordKeyboardEvent(*pendingKey, EventKeyChar, modifierState, 0);
+      recordKeystroke(*pendingKey); /* DEPRECATED */
+      pendingKey++;
+      inputCount--;
     }
-  return 0;
+  }
+  return 1;
 }
 
 static int xkeysym2ucs4(KeySym keysym);
